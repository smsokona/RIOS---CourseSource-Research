#original net
png(file="2w2021.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2021.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2021.g)$n, vertex.size=log(degree(rios_2w_net_2021.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2021")
dev.off()
#stemmed version
png(file="2w2021_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2021_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2021_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2021_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2021")
dev.off()
rios_2w_net_2022.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2022) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2022_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2022) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
png(file="2w2022.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2022.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2022.g)$n, vertex.size=log(degree(rios_2w_net_2022.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2022")
dev.off()
png(file="2w2022_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2022_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2022_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2022_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2022")
dev.off()
#network size
sizes<-sapply(graph_list, gorder)
#edge density
conns<-sapply(graph_list, edge_density)
#Diameter
diameters<-sapply(graph_list, diameter)
#clustering coefficient
ccoeffs<-sapply(graph_list, transitivity)
#components
n_comps<-sapply(graph_list, count_components)
#max component size
max_comp_size<-sapply(sapply(graph_list, components)[2, ], max)
#Summary stats for networks across years
summ_df<-rbind(sizes, conns, diameters, ccoeffs, n_comps, max_comp_size)
colnames(summ_df)<-c("2014", "2014st", "2015", "2015st", "2016", "2016st", "2017", "2017st", "2018", "2018st", "2019", "2019st", "2020", "2020st", "2021", "2021st", "2022", "2022st")
summ_df<-t(summ_df)
View(summ_df)
View(rios_data_token2it)
View(rios_data)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Store all installed packages
ya_loaded <- (.packages())
# Check whether required packages are already installed and grab only those that still need installation
need_load<-my_packages[!(my_packages %in% ya_loaded)]
# Load required packages
lapply(need_load, require, character.only = TRUE)
updated_2DEI <- as.data.frame(read_csv("updated_2DEI.csv", show_col_types = FALSE)[1:3])
View(updated_2DEI)
updated_2DEI <- as.data.frame(read_csv("Data Cleaning/Data for Import/cleanedIT2words.csv", show_col_types = FALSE)[1:3])
setwd("~/Desktop/College/Research/RIOS---CourseSource-Research")
updated_2DEI <- as.data.frame(read_csv("Data Cleaning/Data for Import/cleanedIT2words.csv", show_col_types = FALSE)[1:3])
setwd("/Users/zhaoyuhao/Desktop/College/Research/RIOS---CourseSource-Research")
updated_2DEI <- as.data.frame(read_csv("Data Cleaning/Data for Import/cleanedIT2words.csv", show_col_types = FALSE)[1:3])
# Store string containing all required packages
my_packages <- c('varhandle', 'skimr', 'tidyverse', 'tidytext', 'stopwords', "wordcloud", "reshape2", "ggraph", "kableExtra",'readr', 'dplyr', "igraph","SnowballC")
# Store all installed packages
ya_installed <- library()$results[,1]
# Check whether required packages are already installed and grab only those that still need installation
need_install<-my_packages[!(my_packages %in% ya_installed)]
#install required packages
lapply(need_install, install.packages, character.only = TRUE)
# Store all installed packages
ya_loaded <- (.packages())
# Check whether required packages are already installed and grab only those that still need installation
need_load<-my_packages[!(my_packages %in% ya_loaded)]
# Load required packages
lapply(need_load, require, character.only = TRUE)
updated_2DEI <- as.data.frame(read_csv("Data Cleaning/Data for Import/cleanedIT2words.csv", show_col_types = FALSE)[1:3])
updated_2DEI <- as.data.frame(read_csv("/Users/zhaoyuhao/Desktop/College/Research/RIOS---CourseSource-Research/Data Cleaning/Data for Import/cleanedIT2words.csv", show_col_types = FALSE)[1:3])
updated_2DEI <- as.data.frame(read_csv("/Users/zhaoyuhao/Desktop/College/Research/RIOS---CourseSource-Research/Data Cleaning/Data for Import/cleanedIT2words.csv", show_col_types = FALSE)[1:3])
rios_data_token2it <- read_csv("/Users/zhaoyuhao/Desktop/College/Research/RIOS---CourseSource-Research/Data Cleaning/Data for Export/rios_data_tokenized2.csv")
# seperate the two word pairs coloumn into two seperate ones and subsetting by verified lists
rios_data_token2 <- rios_data_token2it %>% filter(it_tokens_2w %in% updated_2DEI$it_tokens_2w) %>% separate(it_tokens_2w, c("word1", "word2"), sep = " ")
#extracting the edgelist(two-word pairs) and create a igraph object from it
rios_2w_net_2014.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2014) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2014_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2014) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
rios_2w_net_2014.g
rios_2w_net_2014_stemmed.g
rios_2w_net_2015.g
rios_2w_net_2015_stemmed.g
#create a igraph graph object
rios_2w_net_2015.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2015) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2015_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2015) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
rios_2w_net_2015.g
rios_2w_net_2015_stemmed.g
rios_2w_net_2016.g
rios_2w_net_2016_stemmed.g
View(rios_data_token2)
# rios_data_token2 <- rios_data_token2it %>%
#   separate(it_tokens_2w, c("word1", "word2"), sep = " ")
rios_2w_net_2016.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2016) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2016_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2016) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
rios_2w_net_2016.g
rios_2w_net_2016_stemmed.g
#Visualization
set.seed(20181005)
#original net
png(file="2w2014.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2014.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2014.g)$n, vertex.size=log(degree(rios_2w_net_2014.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2014")
dev.off()
#stemmed net
png(file="2w2014_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2014_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2014_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2014_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2014")
dev.off()
rios_2w_net_2014.g
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Store all installed packages
ya_loaded <- (.packages())
# Check whether required packages are already installed and grab only those that still need installation
need_load<-my_packages[!(my_packages %in% ya_loaded)]
# Load required packages
lapply(need_load, require, character.only = TRUE)
#Visualization
set.seed(20181005)
#original net
png(file="2w2014.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2014.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2014.g)$n, vertex.size=log(degree(rios_2w_net_2014.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2014")
dev.off()
#stemmed net
png(file="2w2014_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2014_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2014_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2014_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2014")
dev.off()
#Visualization
set.seed(20181005)
#original net
png(file="2w2015.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2015.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2015.g)$n, vertex.size=log(degree(rios_2w_net_2015.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2015")
dev.off()
#stemmed version
png(file="2w2015_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2015_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2015_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2015_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2015")
# rios_data_token2 <- rios_data_token2it %>%
#   separate(it_tokens_2w, c("word1", "word2"), sep = " ")
rios_2w_net_2016.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2016) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2016_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2016) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
#original net
png(file="2w2016.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2016.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2016.g)$n, vertex.size=log(degree(rios_2w_net_2016.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2016")
dev.off()
#stemmed net
png(file="2w2016_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2016_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2016_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2016_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2016")
dev.off()
rios_2w_net_2017.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2017) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2017_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2017) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
png(file="2w2017.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2017.g, layout=layout_with_fr, edge.width =E(rios_2w_net_2017.g)$n, vertex.size=log(degree(rios_2w_net_2017.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2017")
dev.off()
png(file="2w2017_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2017_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2017_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2017_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2017")
dev.off()
rios_2w_net_2018.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2018) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2018_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2018) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
png(file="2w2018.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2018.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2018.g)$n, vertex.size=log(degree(rios_2w_net_2018.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2018")
dev.off()
png(file="2w2018_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2018_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2018_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2018_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2018")
dev.off()
rios_2w_net_2019.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2019) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2019_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2019) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
#original net
png(file="2w2019.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2019.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2019.g)$n, vertex.size=log(degree(rios_2w_net_2019.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2019")
dev.off()
#stemmed version
png(file="2w2019_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2019_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2019_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2019_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2019")
dev.off()
rios_2w_net_2020.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2020) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2020_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2020) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
#original net
png(file="2w2020.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2020.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2020.g)$n*2, vertex.size=log(degree(rios_2w_net_2020.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2020")
dev.off()
png(file="2w2020_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2020_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2020_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2020_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2020")
dev.off()
rios_2w_net_2021.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2021) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2021_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2021) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
#original net
png(file="2w2021.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2021.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2021.g)$n, vertex.size=log(degree(rios_2w_net_2021.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2021")
dev.off()
#stemmed version
png(file="2w2021_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2021_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2021_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2021_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2021")
dev.off()
rios_2w_net_2022.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2022) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2022_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2022) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
png(file="2w2022.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2022.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2022.g)$n, vertex.size=log(degree(rios_2w_net_2022.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2022")
dev.off()
png(file="2w2022_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2022_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2022_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2022_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2022")
dev.off()
graph_list<-list(rios_2w_net_2014.g, rios_2w_net_2014_stemmed.g, rios_2w_net_2015.g, rios_2w_net_2015_stemmed.g, rios_2w_net_2016.g, rios_2w_net_2016_stemmed.g, rios_2w_net_2017.g, rios_2w_net_2017_stemmed.g, rios_2w_net_2018.g, rios_2w_net_2018_stemmed.g, rios_2w_net_2019.g, rios_2w_net_2019_stemmed.g, rios_2w_net_2020.g, rios_2w_net_2020_stemmed.g, rios_2w_net_2021.g, rios_2w_net_2021_stemmed.g, rios_2w_net_2022.g, rios_2w_net_2022_stemmed.g)
#network size
sizes<-sapply(graph_list, gorder)
#edge density
conns<-sapply(graph_list, edge_density)
#Diameter
diameters<-sapply(graph_list, diameter)
#clustering coefficient
ccoeffs<-sapply(graph_list, transitivity)
#components
n_comps<-sapply(graph_list, count_components)
#max component size
max_comp_size<-sapply(sapply(graph_list, components)[2, ], max)
#Summary stats for networks across years
summ_df_new<-rbind(sizes, conns, diameters, ccoeffs, n_comps, max_comp_size)
colnames(summ_df_new)<-c("2014", "2014st", "2015", "2015st", "2016", "2016st", "2017", "2017st", "2018", "2018st", "2019", "2019st", "2020", "2020st", "2021", "2021st", "2022", "2022st")
summ_df_new<-t(summ_df_new)
View(summ_df_new)
View(summ_df)
View(rios_data)
View(rios_data_tokenizedit)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
DEI_count<-rep(0, 286)
for(i in 1:length(DEI_count)){
for (k in 1:length(rios_data_tokenizedit$Title)){
if(rios_data_tokenizedit$dei_relatedit[k]=="TRUE" &&rios_data_tokenizedit$Title[k]==rios_data$Title[i])
{
DEI_count[i]=DEI_count[i]+1
}
}
}
rios_data[,10]<-DEI_count
colnames(rios_data)[10]<-"DEI_count"
rios_data[,11]<-(rios_data$DEI_count/rios_data$`Word Count of Inclusive Teaching?`)*100
colnames(rios_data)[11]<-"DEI Words %"
V(rios_2w_net_2014.g)
updated_DEI<- as.data.frame(read_csv("/Users/zhaoyuhao/Desktop/College/Research/RIOS---CourseSource-Research/Data Cleaning/Data for Export/JEDIkeywords.csv"))
View(updated_DEI)
V(rios_2w_net_2014.g) &in& updated_DEI$allwords
V(rios_2w_net_2014.g) &in updated_DEI$allwords
V(rios_2w_net_2014.g) %in% updated_DEI$allwords
type(V(rios_2w_net_2014.g))
class(V(rios_2w_net_2014.g))
match(V(rios_2w_net_2014.g), updated_DEI)
match(V(rios_2w_net_2014.g), updated_DEI$allwords)
V(rios_2w_net_2014.g)
as.character(V(rios_2w_net_2014.g)) %in% updated_DEI$allwords
as.character(V(rios_2w_net_2014.g))
V(rios_2w_net_2014.g)
V(rios_2w_net_2014.g)$name
V(rios_2w_net_2014.g)$name %in% updated_DEI$allwords
updated_DEI<- read_csv("/Users/zhaoyuhao/Desktop/College/Research/RIOS---CourseSource-Research/Data Cleaning/Data for Export/JEDIkeywords.csv")
V(rios_2w_net_2014.g)[V(rios_2w_net_2014.g)$name %in% updated_DEI$allwords]
V(rios_2w_net_2014.g)[!V(rios_2w_net_2014.g)$name %in% updated_DEI$allwords]
#extracting the edgelist(two-word pairs) and create a igraph object from it
rios_2w_net_2014.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2014) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
V(rios_2w_net_2014.g)[V(rios_2w_net_2014.g)$name %in% updated_DEI$allwords]$color<-"#1f78b4"
V(rios_2w_net_2014.g)[!V(rios_2w_net_2014.g)$name %in% updated_DEI$allwords]$color<- "#a6cee3"
#stemmed version
rios_2w_net_2014_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2014) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
V(rios_2w_net_2014_stemmed.g)[V(rios_2w_net_2014_stemmed.g)$name %in% updated_DEI$allwords]$color<-"#1f78b4"
V(rios_2w_net_2014_stemmed.g)[!V(rios_2w_net_2014_stemmed.g)$name %in% updated_DEI$allwords]$color<- "#a6cee3"
#Visualization
set.seed(20181005)
#original net
png(file="2w2014.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2014.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2014.g)$n, vertex.size=log(degree(rios_2w_net_2014.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2014")
dev.off()
#stemmed net
png(file="2w2014_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2014_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2014_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2014_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2014")
dev.off()
V(rios_2w_net_2014.g)[V(rios_2w_net_2014.g)$name %in% updated_DEI$allwords]
View(updated_DEI)
V(rios_2w_net_2014.g)
V(rios_2w_net_2014.g)$name %in% updated_DEI$allwords
V(rios_2w_net_2014.g)$name
#create a igraph graph object
rios_2w_net_2015.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2015) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
V(rios_2w_net_2015.g)[V(rios_2w_net_2015.g)$name %in% updated_DEI$allwords]$color<-"#1f78b4"
V(rios_2w_net_2015.g)[!V(rios_2w_net_2015.g)$name %in% updated_DEI$allwords]$color<- "#a6cee3"
#stemmed version
rios_2w_net_2015_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2015) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
V(rios_2w_net_2015_stemmed.g)[V(rios_2w_net_2015_stemmed.g)$name %in% updated_DEI$allwords]$color<-"#1f78b4"
V(rios_2w_net_2015_stemmed.g)[!V(rios_2w_net_2015_stemmed.g)$name %in% updated_DEI$allwords]$color<- "#a6cee3"
#Visualization
set.seed(20181005)
#original net
png(file="2w2015.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2015.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2015.g)$n, vertex.size=log(degree(rios_2w_net_2015.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2015")
legend(0.95, 0, legend=c("2DEI","1DEI")  , col = c("#a6cee3", "#1f78b4") , bty = "n", pch=c(20, 20) , lty =c(0, 0),  pt.cex = 2, cex = 1, text.col=c("#a6cee3", "#1f78b4") ,xjust = 0, yjust = 1, x.intersp = 1, y.intersp = 1,adj = c(0, 0.5), horiz = FALSE)
dev.off()
#stemmed version
png(file="2w2015_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2015_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2015_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2015_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2015")
legend(0.95, 0, legend=c("2DEI","1DEI")  , col = c("#a6cee3", "#1f78b4") , bty = "n", pch=c(20, 20) , lty =c(0, 0),  pt.cex = 2, cex = 1, text.col=c("#a6cee3", "#1f78b4") ,xjust = 0, yjust = 1, x.intersp = 1, y.intersp = 1,adj = c(0, 0.5), horiz = FALSE)
dev.off()
#Visualization
set.seed(20181005)
#original net
png(file="2w2014.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2014.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2014.g)$n, vertex.size=log(degree(rios_2w_net_2014.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2014")
legend(0.95, 0, legend=c("2DEI","1DEI")  , col = c("#a6cee3", "#1f78b4") , bty = "n", pch=c(20, 20) , lty =c(0, 0),  pt.cex = 2, cex = 1, text.col=c("#a6cee3", "#1f78b4") ,xjust = 0, yjust = 1, x.intersp = 1, y.intersp = 1,adj = c(0, 0.5), horiz = FALSE)
dev.off()
#stemmed net
png(file="2w2014_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2014_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2014_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2014_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2014")
legend(0.95, 0, legend=c("2DEI","1DEI")  , col = c("#a6cee3", "#1f78b4") , bty = "n", pch=c(20, 20) , lty =c(0, 0),  pt.cex = 2, cex = 1, text.col=c("#a6cee3", "#1f78b4") ,xjust = 0, yjust = 1, x.intersp = 1, y.intersp = 1,adj = c(0, 0.5), horiz = FALSE)
dev.off()
# rios_data_token2 <- rios_data_token2it %>%
#   separate(it_tokens_2w, c("word1", "word2"), sep = " ")
rios_2w_net_2016.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2016) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
V(rios_2w_net_2016.g)[V(rios_2w_net_2016.g)$name %in% updated_DEI$allwords]$color<-"#1f78b4"
V(rios_2w_net_2016.g)[!V(rios_2w_net_2016.g)$name %in% updated_DEI$allwords]$color<- "#a6cee3"
#stemmed version
rios_2w_net_2016_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2016) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
V(rios_2w_net_2016_stemmed.g)[V(rios_2w_net_2016_stemmed.g)$name %in% updated_DEI$allwords]$color<-"#1f78b4"
V(rios_2w_net_2016_stemmed.g)[!V(rios_2w_net_2016_stemmed.g)$name %in% updated_DEI$allwords]$color<- "#a6cee3"
set.seed(20181005)
#original net
png(file="2w2016.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2016.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2016.g)$n, vertex.size=log(degree(rios_2w_net_2016.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2016")
legend(0.95, 0, legend=c("2DEI","1DEI")  , col = c("#a6cee3", "#1f78b4") , bty = "n", pch=c(20, 20) , lty =c(0, 0),  pt.cex = 2, cex = 1, text.col=c("#a6cee3", "#1f78b4") ,xjust = 0, yjust = 1, x.intersp = 1, y.intersp = 1,adj = c(0, 0.5), horiz = FALSE)
dev.off()
#stemmed net
png(file="2w2016_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2016_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2016_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2016_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2016")
legend(0.95, 0, legend=c("2DEI","1DEI")  , col = c("#a6cee3", "#1f78b4") , bty = "n", pch=c(20, 20) , lty =c(0, 0),  pt.cex = 2, cex = 1, text.col=c("#a6cee3", "#1f78b4") ,xjust = 0, yjust = 1, x.intersp = 1, y.intersp = 1,adj = c(0, 0.5), horiz = FALSE)
dev.off()
#Visualization
set.seed(20181005)
#original net
png(file="2w2014.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2014.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2014.g)$n, vertex.size=log(degree(rios_2w_net_2014.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2014")
legend(0.95, 0.5, legend=c("2DEI","1DEI")  , col = c("#a6cee3", "#1f78b4") , bty = "n", pch=c(20, 20) , lty =c(0, 0),  pt.cex = 2, cex = 1, text.col=c("#a6cee3", "#1f78b4") ,xjust = 0, yjust = 1, x.intersp = 1, y.intersp = 1,adj = c(0, 0.5), horiz = FALSE)
dev.off()
#stemmed net
png(file="2w2014_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2014_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2014_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2014_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2014")
legend(0.95, 0.5, legend=c("2DEI","1DEI")  , col = c("#a6cee3", "#1f78b4") , bty = "n", pch=c(20, 20) , lty =c(0, 0),  pt.cex = 2, cex = 1, text.col=c("#a6cee3", "#1f78b4") ,xjust = 0, yjust = 1, x.intersp = 1, y.intersp = 1,adj = c(0, 0.5), horiz = FALSE)
dev.off()
#Visualization
set.seed(20181005)
#original net
png(file="2w2014.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2014.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2014.g)$n, vertex.size=log(degree(rios_2w_net_2014.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2014")
legend(0.95, 1, legend=c("2DEI","1DEI")  , col = c("#a6cee3", "#1f78b4") , bty = "n", pch=c(20, 20) , lty =c(0, 0),  pt.cex = 2, cex = 1, text.col=c("#a6cee3", "#1f78b4") ,xjust = 0, yjust = 1, x.intersp = 1, y.intersp = 1,adj = c(0, 0.5), horiz = FALSE)
dev.off()
#stemmed net
png(file="2w2014_stemmed.png",res=1000, width=10000, height=10000, pointsize = 9)
plot(rios_2w_net_2014_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2014_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2014_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.3, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2014")
legend(0.95, 1, legend=c("2DEI","1DEI")  , col = c("#a6cee3", "#1f78b4") , bty = "n", pch=c(20, 20) , lty =c(0, 0),  pt.cex = 2, cex = 1, text.col=c("#a6cee3", "#1f78b4") ,xjust = 0, yjust = 1, x.intersp = 1, y.intersp = 1,adj = c(0, 0.5), horiz = FALSE)
dev.off()
