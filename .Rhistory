#Visualization
set.seed(20181005)
# a <- arrow(angle = 30, length = unit(0.1, "inches"), ends = "last", type = "open")
#
# ggraph(rios_phrase_network, layout = "fr") + geom_edge_link(aes(color = n, width = n), arrow = a) +
#     geom_node_point() + geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
#   labs(title = "Network Plot of (DEI Related) Word Relationship in 2014")
plot(rios_2w_net_2014.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2014.g)$n, vertex.size=log(degree(rios_2w_net_2014.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2014")
plot(rios_2w_net_2014_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2014_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2014_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2014")
rios_2w_net_2014.g
# #seperate the two-word pairs into two columns
# rios_data_token2 <- rios_data_token2it %>%
#   separate(it_tokens_2w, c("word1", "word2"), sep = " ")
#create a igraph graph object
rios_2w_net_2015.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2015) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2015_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2015) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
#Visualization
set.seed(20181005)
# a <- arrow(angle = 30, length = unit(0.1, "inches"), ends = "last", type = "open")
#
# ggraph(rios_phrase_network, layout = "fr") + geom_edge_link(aes(color = n, width = n), arrow = a) +
#     geom_node_point() + geom_node_text(aes(label = name), vjust = 1, hjust = 1)
plot(rios_2w_net_2015.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2015.g)$n, vertex.size=log(degree(rios_2w_net_2015.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) Word Relationship in 2015")
plot(rios_2w_net_2015_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2015_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2015_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2015")
# rios_data_token2 <- rios_data_token2it %>%
#   separate(it_tokens_2w, c("word1", "word2"), sep = " ")
rios_2w_net_2016.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2016) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2016_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2016) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
# a <- arrow(angle = 30, length = unit(0.1, "inches"), ends = "last", type = "open")
#
# ggraph(rios_phrase_network, layout = "fr") + geom_edge_link(aes(color = n, width = n), arrow = a) +
#     geom_node_point() + geom_node_text(aes(label = name), vjust = 1, hjust = 1)
#original net
plot(rios_2w_net_2016.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2016.g)$n, vertex.size=log(degree(rios_2w_net_2016.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.3, main="Network of (DEI Related) Word Relationship in 2016")
#stemmed net
plot(rios_2w_net_2016_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2016_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2016_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2016")
rios_2w_net_2016_stemmed.g
rios_2w_net_2016.g
rios_2w_net_2017.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2017) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2017_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2017) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
#
# a <- arrow(angle = 30, length = unit(0.1, "inches"), ends = "last", type = "open")
#
# ggraph(rios_phrase_network, layout = "fr") + geom_edge_link(aes(color = n, width = n), arrow = a) +
#     geom_node_point() + geom_node_text(aes(label = name), vjust = 1, hjust = 1)
plot(rios_2w_net_2017.g, layout=layout_with_fr, edge.width =E(rios_2w_net_2017.g)$n, vertex.size=log(degree(rios_2w_net_2017.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.3, main="Network of (DEI Related) Word Relationship in 2017")
plot(rios_2w_net_2017_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2017_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2017_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2017")
rios_2w_net_2018.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2018) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2018_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2018) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
# a <- arrow(angle = 30, length = unit(0.1, "inches"), ends = "last", type = "open")
#
# ggraph(rios_phrase_network, layout = "fr") + geom_edge_link(aes(color = n, width = n), arrow = a) +
#     geom_node_point() + geom_node_text(aes(label = name), vjust = 1, hjust = 1)
plot(rios_2w_net_2018.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2018.g)$n, vertex.size=log(degree(rios_2w_net_2018.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.3, main="Network of (DEI Related) Word Relationship in 2018")
plot(rios_2w_net_2018_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2018_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2018_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2018")
rios_2w_net_2019.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2019) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2019_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2019) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
#
# a <- arrow(angle = 30, length = unit(0.1, "inches"), ends = "last", type = "open")
#
# ggraph(rios_phrase_network, layout = "fr") + geom_edge_link(aes(color = n, width = n), arrow = a) +
#     geom_node_point() + geom_node_text(aes(label = name), vjust = 1, hjust = 1)
#png(file="2w2019.png",res=4000, width=35000, height=35000, pointsize = 9)
plot(rios_2w_net_2019.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2019.g)$n,vertex.label=V(rios_2w_net_2019.g)$name, vertex.size=log(degree(rios_2w_net_2019.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.3, main="Network of (DEI Related) Word Relationship in 2019")
plot(rios_2w_net_2019_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2019_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2019_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2014")
#dev.off()
rios_2w_net_2019.g
rios_2w_net_2019_stemmed.g
set.seed(20181005)
#
# a <- arrow(angle = 30, length = unit(0.1, "inches"), ends = "last", type = "open")
#
# ggraph(rios_phrase_network, layout = "fr") + geom_edge_link(aes(color = n, width = n), arrow = a) +
#     geom_node_point() + geom_node_text(aes(label = name), vjust = 1, hjust = 1)
#png(file="2w2019.png",res=4000, width=35000, height=35000, pointsize = 9)
plot(rios_2w_net_2019.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2019.g)$n,vertex.label=V(rios_2w_net_2019.g)$name, vertex.size=log(degree(rios_2w_net_2019.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.3, main="Network of (DEI Related) Word Relationship in 2019")
plot(rios_2w_net_2019_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2019_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2019_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2019")
#dev.off()
set.seed(20181005)
#
# a <- arrow(angle = 30, length = unit(0.1, "inches"), ends = "last", type = "open")
#
# ggraph(rios_phrase_network, layout = "fr") + geom_edge_link(aes(color = n, width = n), arrow = a) +
#     geom_node_point() + geom_node_text(aes(label = name), vjust = 1, hjust = 1)
#png(file="2w2019.png",res=4000, width=35000, height=35000, pointsize = 9)
plot(rios_2w_net_2019.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2019.g)$n,vertex.label=V(rios_2w_net_2019.g)$name, vertex.size=log(degree(rios_2w_net_2019.g)),vertex.label.degree=-pi/2,
vertex.label.dist=0.2,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.3, main="Network of (DEI Related) Word Relationship in 2019")
plot(rios_2w_net_2019_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2019_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2019_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2019")
#dev.off()
rios_2w_net_2020.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2020) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2020_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2020) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
plot(rios_2w_net_2020.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2020.g)$n*2, vertex.size=log(degree(rios_2w_net_2020.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.3, main="Network of (DEI Related) Word Relationship in 2020")
plot(rios_2w_net_2020_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2020_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2020_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2020")
rios_2w_net_2021.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2021) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2021_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2021) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
rios_2w_net_2021_stemmed.g
rios_2w_net_2021.g
set.seed(20181005)
#
# a <- arrow(angle = 30, length = unit(0.1, "inches"), ends = "last", type = "open")
#
# ggraph(rios_phrase_network, layout = "fr") + geom_edge_link(aes(color = n, width = n), arrow = a) +
#     geom_node_point() + geom_node_text(aes(label = name), vjust = 1, hjust = 1)
plot(rios_2w_net_2021.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2021.g)$n, vertex.size=log(degree(rios_2w_net_2021.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.3, main="Network of (DEI Related) Word Relationship in 2021")
plot(rios_2w_net_2021_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2021_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2021_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2021")
rios_2w_net_2022.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2022) %>%
count(word1, word2, sort = TRUE) %>%
graph_from_data_frame()
#stemmed version
rios_2w_net_2022_stemmed.g <- rios_data_token2 %>%
filter(dei_related == TRUE & Year == 2022) %>%
mutate(stem1 = wordStem(`word1`, language = "en")) %>%
mutate(stem2 = wordStem(`word2`, language = "en")) %>%
count(stem1, stem2, sort = TRUE) %>%
graph_from_data_frame()
set.seed(20181005)
# a <- arrow(angle = 30, length = unit(0.1, "inches"), ends = "last", type = "open")
#
# ggraph(rios_phrase_network, layout = "fr") + geom_edge_link(aes(color = n, width = n), arrow = a) +
#     geom_node_point() + geom_node_text(aes(label = name), vjust = 1, hjust = 1)  +
#   labs(title = "Network Plot of (DEI Related) Word Relationship in 2022")
plot(rios_2w_net_2022.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2022.g)$n, vertex.size=log(degree(rios_2w_net_2022.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.3, main="Network of (DEI Related) Word Relationship in 2022")
plot(rios_2w_net_2022_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2022_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2022_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2022")
rios_2w_net_2022.g
rios_2w_net_2022_stemmed.g
rios_2w_net_2014.g
rios_2w_net_2014_stemmed.g
plot(rios_2w_net_2020.g, layout=layout_with_kk, edge.width =E(rios_2w_net_2020.g)$n*2, vertex.size=log(degree(rios_2w_net_2020.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.3, main="Network of (DEI Related) Word Relationship in 2020")
plot(rios_2w_net_2020_stemmed.g,layout=layout_with_kk, edge.width =E(rios_2w_net_2020_stemmed.g)$n, vertex.size=log(degree(rios_2w_net_2020_stemmed.g)),vertex.label.degree=-pi/2,
vertex.label.dist=1,vertex.label.cex=0.5, edge.arrow.size=0.3, edge.arrow.width=0.2, main="Network of (DEI Related) stemmed Word Relationship in 2020")
graph_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(graph_df)<-c("Unstemmed", "Stemmed")
rownames(graph_df)<-c(as.character(2014:2022))
View(graph_df)
graph_df[1,]<-c(rios_2w_net_2014.g, rios_2w_net_2014_stemmed.g)
graph_list<-list(rios_2w_net_2014.g, rios_2w_net_2014_stemmed.g, rios_2w_net_2015.g, rios_2w_net_2015_stemmed.g, rios_2w_net_2016.g, rios_2w_net_2016_stemmed.g, rios_2w_net_2017.g, rios_2w_net_2017_stemmed.g, rios_2w_net_2018.g, rios_2w_net_2018_stemmed.g, rios_2w_net_2019.g, rios_2w_net_2019_stemmed.g, rios_2w_net_2020.g, rios_2w_net_2020_stemmed.g, rios_2w_net_2021.g, rios_2w_net_2021_stemmed.g, rios_2w_net_2022.g, rios_2w_net_2022_stemmed.g)
graph_list[[1]]
rios_2w_net_2014.g
0:1
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 0:1){
size_df[i,k]=cgorder(graph_list[[i+k]])
}
}
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 0:1){
size_df[i,k]=gorder(graph_list[[i+k]])
}
}
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 0:1){
size_df[i,k+1]=gorder(graph_list[[i+k]])
}
}
View(size_df)
rios_2w_net_2014_stemmed.g
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 0:1){
size_df[i,k+1]=gorder(graph_list[[i+k+1]])
}
}
View(size_df)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 1:2){
size_df[i,k]=gorder(graph_list[[i+k-1]])
}
}
View(size_df)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 1:2){
size_df[i,k]=gorder(graph_list[[i+k-1]])
i+1
}
}
View(size_df)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 1:2){
size_df[i,k]=gorder(graph_list[[i+k-1]])
i=i+1
}
}
View(size_df)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 1:2){
size_df[i,k]=gorder(graph_list[[i+k-1]])
}
i=i+1
}
View(size_df)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 1:2){
size_df[i,k]=gorder(graph_list[[i+k-1]])
}
i=i+1
}
View(size_df)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 1:2){
size_df[i,k]=gorder(graph_list[[i+k-1]])
}
i<-i+1
}
View(size_df)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 1:2){
i<-i+1
size_df[i,k]=gorder(graph_list[[i+k-1]])
}
}
View(size_df)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
i<-i+1
for(k in 1:2){
size_df[i,k]=gorder(graph_list[[i+k-1]])
}
}
View(size_df)
sapply(graph_list, gorder)
1:9:2
seq(1, 9, 2)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in seq(1, 9, 2)){
size_df$Unstemmed=sapply(graph_list, gorder)[i]
size_df$Stemmed=sapply(graph_list, gorder)[i+1]
}
View(size_df)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
size_df$Unstemmed[i]=sapply(graph_list, gorder)[i]
size_df$Stemmed[i]=sapply(graph_list, gorder)[i+1]
i<-i+1
}
View(size_df)
sapply(graph_list, gorder)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 1:2)
size_df[i, k]=sapply(graph_list, gorder)[i+k]
}
View(size_df)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 1:2){
size_df[i, k]=sapply(graph_list, gorder)[i+k]
}
}
View(size_df)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 0:1){
size_df[i, k]=sapply(graph_list, gorder)[i+k]
}
}
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 0:1){
size_df[i, k+1]=sapply(graph_list, gorder)[i+k]
}
}
View(size_df)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 0:1){
for(j in 0:7){
size_df[i, k+1]=sapply(graph_list, gorder)[i+k+j]
}
}
}
View(size_df)
#network size
size_df<-data.frame(matrix(ncol= 2, nrow= 9))
colnames(size_df)<-c("Unstemmed", "Stemmed")
rownames(size_df)<-c(as.character(2014:2022))
for(i in 1:9){
for(k in 1:2){
for(j in 0:7){
size_df[i, k]=sapply(graph_list, gorder)[i+k+j-1]
}
}
}
View(size_df)
#network size
sizes<-sapply(graph_list, gorder)
#edge density
conns<-sapply(graph_list, edge_density)
#Diameter
diamters<-sapply(graph_list, diameter)
#clustering coefficient
cc<-sapply(graph_list, transitivity)
summ_df<-rbind(sizes, conns, diameters, ccs)
#network size
sizes<-sapply(graph_list, gorder)
#edge density
conns<-sapply(graph_list, edge_density)
#Diameter
diameters<-sapply(graph_list, diameter)
#clustering coefficient
cc<-sapply(graph_list, transitivity)
summ_df<-rbind(sizes, conns, diameters, ccs)
#network size
sizes<-sapply(graph_list, gorder)
#edge density
conns<-sapply(graph_list, edge_density)
#Diameter
diameters<-sapply(graph_list, diameter)
#clustering coefficient
ccs<-sapply(graph_list, transitivity)
summ_df<-rbind(sizes, conns, diameters, ccs)
View(summ_df)
sizes
colnames(summ_df)<-c("2014", "2014st", "2015", "2015st", "2016", "2016st", "2017", "2017st", "2018", "2018st", "2019", "2019st", "2020", "2020st", "2021", "2021st", "2022", "2022st")
t(summ_df)
summ_df<-t(summ_df)
drop(size_df)
rm(size_df)
rm(graph_df)
rm(rios_phrase_network)
rm(rios_2w_net.g)
rm(cc)
rm(diamters)
components(rios_2w_net_2014.g)
comps<-sapply(graph_list, components$no)
count_components(rios_2w_net_2014.g)
comps<-sapply(graph_list, count_components)
summ_df<-rbind(sizes, conns, diameters, ccs, comps)
View(summ_df)
colnames(summ_df)<-c("2014", "2014st", "2015", "2015st", "2016", "2016st", "2017", "2017st", "2018", "2018st", "2019", "2019st", "2020", "2020st", "2021", "2021st", "2022", "2022st")
summ_df<-t(summ_df)
component_distribution(rios_2w_net_2014.g)
components(rios_2w_net_2014.g)
max_comp_size<-sapply(graph_list, max(components$csize))
max_comp_size<-sapply(graph_list, components$csize)
max_comp_size<-sapply(graph_list, components)
max_comp_size
View(max_comp_size)
max_comp_size<-sapply(graph_list, components)[2, ]
View(max_comp_size)
max_comp_size<-sapply(sapply(graph_list, components)[2, ], max)
components(graph_list[[2]])
#max component size
max_comp_size<-t(sapply(sapply(graph_list, components)[2, ], max))
comps
max_comp_size<-sapply(sapply(graph_list, components)[2, ], max)
max_comp_size<-sapply(sapply(graph_list, components)[2, ], max)$V1
max_comp_size<-sapply(sapply(graph_list, components)[2, ], max)
max_comp_size
summ_df<-rbind(sizes, conns, diameters, ccs, comps, max_comp_size)
View(summ_df)
colnames(summ_df)<-c("2014", "2014st", "2015", "2015st", "2016", "2016st", "2017", "2017st", "2018", "2018st", "2019", "2019st", "2020", "2020st", "2021", "2021st", "2022", "2022st")
summ_df<-t(summ_df)
View(rios_data_token2it)
git config credential.helper
